const express = require('express');
const bodyParser = require('body-parser');
const { v4: uuidv4 } = require('uuid');

const app = express();
const port = 3000;

app.use(bodyParser.json());

// In-memory storage for orders
let orders = [];

// Endpoint to create an order
app.post('/order', (req, res) => {
    const { userId, merchantId, product, quantity } = req.body;

    if (!userId || !merchantId || !product || !quantity) {
        return
    res.status(400).send({ message: 'Order must have userId, MerchantId, product and quantity'});
    }

    const order = {
        id: uuidv4(),
        userId,
        merchantId,
        product,
        quantity,
        status: 'created', //Initial status
        createdAT: new Date()
    };

    orders.push(order);
    res.status(201).send(order);
});

// Endpoint to cancel an order
app.delete('/order/:id', (req,res) => {
    const orderId = req.param.id;
    const order = orders.find(o => o.id === orderId);

    if (!order) {
        return
    res.status(404).send({ message: 'Order not found' });
    }

    order.status = 'cancelled';
    res.status(200).send(order);
});

//Endpoint to get orders for a user
app.get('/orders/user/:userId', (req,res) => {
    const userid =req.param.userId;
    const userOrders = orders.filter(order => order.userId === userId);

    res.status(200).send(userOrders);
});

//Endpoint to get orders for a merchant
app.get('/orders/merchant/:merchantId', (req, res) => {
    const merchantId = req.param.merchantId;
    const merchantOrders = orders.filter(order => order.merchantId === merchantId);

    res.status(200).send(merchantOrders);
});

app.listen(port. () => {
    console.log('Server running on port ${port}');
});